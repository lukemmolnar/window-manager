# File Drag-and-Drop Functionality

This document describes the drag-and-drop functionality implemented in the ExplorerWindow component, which allows users to move files and folders by dragging and dropping them.

## Overview

The drag-and-drop functionality enables admin users to move files and folders within the file explorer by dragging them to a different folder. This provides a more intuitive and user-friendly way to organize files compared to using commands or buttons.

## Implementation Details

### Frontend (ExplorerWindow.jsx)

1. **State Variables**:
   - `draggedItem`: Tracks the item being dragged
   - `dropTarget`: Tracks the folder where the item can be dropped
   - `isMoving`: Indicates if a move operation is in progress

2. **Event Handlers**:
   - `handleDragStart`: Triggered when a user starts dragging a file or folder
   - `handleDragOver`: Triggered when a dragged item is over a potential drop target
   - `handleDragLeave`: Triggered when a dragged item leaves a potential drop target
   - `handleDrop`: Triggered when a dragged item is dropped on a valid target

3. **Visual Feedback**:
   - CSS classes provide visual feedback during drag operations:
     - `.dragging`: Applied to the item being dragged
     - `.drop-target`: Applied to folders that can accept the dragged item

4. **Restrictions**:
   - Only admin users can drag and drop files
   - Files can only be dropped into directories
   - Files cannot be dropped onto themselves
   - Files cannot be dropped into their current parent directory

### Backend (server-files.js)

The backend supports file movement through the `/api/files/move` endpoint, which:

1. Validates source and destination paths
2. Handles both public and private files
3. Prevents invalid operations (e.g., moving from public to private folders)
4. Checks for name conflicts at the destination
5. Performs the actual file move operation using Node.js fs.renameSync

## CSS Styling

Custom CSS styles in ExplorerWindow.css provide visual feedback during drag operations:

```css
[draggable] {
  cursor: grab;
}

[draggable]:active {
  cursor: grabbing;
}

.drop-target {
  background-color: rgba(20, 184, 166, 0.2) !important;
  border: 2px dashed rgb(20, 184, 166) !important;
  border-radius: 0.25rem;
}

.dragging {
  opacity: 0.5;
  background-color: rgba(20, 184, 166, 0.1);
}
```

## Usage

1. Admin users can drag any file or folder by clicking and holding on it
2. While dragging, folders will highlight when hovered over to indicate they are valid drop targets
3. Dropping the file or folder into a highlighted folder will move it to that location
4. The file tree will automatically refresh to show the updated file structure

## Error Handling

The implementation includes comprehensive error handling:

1. Client-side validation prevents invalid drop operations
2. Server-side validation ensures the move operation is valid
3. Error messages are displayed to the user if a move operation fails
4. The UI state is reset if an error occurs during the move operation

## Future Enhancements

Potential future enhancements to the drag-and-drop functionality:

1. Multi-select and drag multiple files at once
2. Copy files with a modifier key (e.g., Ctrl+drag)
3. Drag files from the file explorer to other components (e.g., editor)
4. Drag files from outside the application into the file explorer
